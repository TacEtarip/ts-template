{"version":3,"file":"main.js","mappings":"uBACIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,WCAlF,MAAM,EAA+BI,QAAQ,U,aCA7C,MAAM,EAA+BA,QAAQ,U,stDCIvC,QAAEC,GAAY,EAGdC,EAAY,CAACC,EAAqBC,IACxC,iBAAoB,CAAEC,KAAM,GAAGF,KAAeC,MAKxCE,EAAS,CACdC,YAAa,CACNC,OAAQ,cACRC,IAAK,IAAcP,EAAU,cAAeD,IAGnDS,WAAY,CACLF,OAAQ,aACRC,IAAK,IAAcP,EAAU,aAAcD,IAG/CU,KAAM,CACFH,OAAQ,OACRC,IAAK,IAAcP,EAAU,OAAQD,KC1BvC,EAA+BD,QAAQ,e,aCA7C,MAAM,EAA+BA,QAAQ,W,aCA7C,MAAM,EAA+BA,QAAQ,U,aCA7C,MAAM,EAA+BA,QAAQ,sB,qZCAvC,EAA+BA,QAAQ,U,aCA7C,MAAM,EAA+BA,QAAQ,Q,aCsC7C,MCtCM,EAA+BA,QAAQ,Q,aCmF7C,MC9EMY,EAAWC,QAAQC,IAAIC,iBAAmB,EAE1CC,EViCaV,EAAOI,WUf1B,IAAO,CAAEO,OAdMC,IACXF,EAAUP,MAAMU,KAAK,aAAaD,KAClC,MACME,EADY,IDItB,MAOIC,YAAYC,GACRC,KAAKC,IAAM,MACXD,KAAKE,6BACLF,KAAKG,eACLH,KAAKI,uBACLJ,KAAKK,cAAcN,GAQvBG,6BACIF,KAAKC,IAAIK,IAAI,OACbN,KAAKC,IAAIK,IAAI,OACbN,KAAKC,IAAIK,IAAI,OACbN,KAAKC,IAAIK,IAAI,IAAO,iBACpBN,KAAKC,IAAIK,IAAI,YACbN,KAAKC,IAAIK,IAAI,eAAmB,CAAEC,UAAU,KAShDH,uBACIJ,KAAKC,IAAIK,IAAI,YAAa,UAAiB,UAAgB,IAE3DN,KAAKC,IAAI9B,IAAI,KAAK,CAACqC,EAAKC,KACtBA,EAAIC,SAAS,gBASnBP,eACI,MAAMQ,EE9DkB,MAE5B,MACMC,GAAS,IAAAC,UAUf,OANAD,EAAOzC,IAAI,KAAK,CAACqC,EAAKC,IACXA,EAAIK,KAAK,CAACC,QAAS,6BAGV,IJTxB,MAIIjB,YAAYkB,EAAcJ,GACtBZ,KAAKiB,QAAUL,EACfZ,KAAKkB,MAAoB,MAAZF,EAAK,GAAaA,EAAO,IAAMA,EAUrCA,WACP,OAAOhB,KAAKkB,MAULN,aACP,OAAOZ,KAAKiB,UI5BG,UASuBL,IFmDlBO,GACpBnB,KAAKC,IAAIK,IAAIK,EAAYK,KAAML,EAAYC,QAU/CP,cAAcN,GACVC,KAAKH,OAAS,iBAAkBG,KAAKC,KACrCD,KAAKH,OAAOuB,OAAOrB,KCtEd,KAKgBF,OAEzBA,EAAOwB,GAAG,aAAa,KACnB5B,EAAUP,MAAMU,KAAK,4BAGzBC,EAAOwB,GAAG,SAAS,KACf5B,EAAUP,MAAMU,KAAK,wBAIL0B,MAAOjC,KErB/BkC,CAAyB,EADC,EACuBjE,I","sources":["webpack://typescriptnodetemplate/webpack/bootstrap","webpack://typescriptnodetemplate/webpack/runtime/compat get default export","webpack://typescriptnodetemplate/webpack/runtime/define property getters","webpack://typescriptnodetemplate/webpack/runtime/hasOwnProperty shorthand","webpack://typescriptnodetemplate/external commonjs \"throng\"","webpack://typescriptnodetemplate/external commonjs \"bunyan\"","webpack://typescriptnodetemplate/./src/config/config.ts","webpack://typescriptnodetemplate/external commonjs \"compression\"","webpack://typescriptnodetemplate/external commonjs \"express\"","webpack://typescriptnodetemplate/external commonjs \"helmet\"","webpack://typescriptnodetemplate/external commonjs \"swagger-ui-express\"","webpack://typescriptnodetemplate/external commonjs \"morgan\"","webpack://typescriptnodetemplate/external commonjs \"cors\"","webpack://typescriptnodetemplate/./src/server/routes/Route.ts","webpack://typescriptnodetemplate/external node-commonjs \"http\"","webpack://typescriptnodetemplate/./src/server/ExpressAPP.ts","webpack://typescriptnodetemplate/./src/index.ts","webpack://typescriptnodetemplate/./src/server/routes/exampleRoute.ts","webpack://typescriptnodetemplate/webpack/startup"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"throng\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bunyan\");","import bunyan from 'bunyan';\r\nimport pjs from '../../package.json';\r\n\r\n// * Obtiene el json package\r\nconst { version } = pjs;\r\n\r\n// * Crea un logger\r\nconst getLogger = (serviceName: string, serviceVersion: string) => \r\nbunyan.createLogger({ name: `${serviceName}:${serviceVersion}` });\r\n\r\n/**\r\n * * Configuraci贸n segun env\r\n */\r\nconst config = {\r\n\tdevelopment: {\r\n        estado: 'development',\r\n        log: (): bunyan => getLogger('DEVELOPMENT', version),\r\n\t},\r\n\r\n\tproduction: {\r\n        estado: 'production',\r\n        log: (): bunyan => getLogger('PRODUCCION', version),\r\n\t},\r\n\r\n    test: {\r\n        estado: 'test',\r\n        log: (): bunyan => getLogger('TEST', version),\r\n    }\r\n};\r\n\r\n/**\r\n * Adquiere una configuraci贸n segun el tipo de env\r\n * @param env \r\n * @returns \r\n */\r\nexport const getConfig = (env: string) => {\r\n    switch (env) {\r\n        case 'development':\r\n            return config.development;\r\n        case 'production':\r\n            return config.production;\r\n        case 'test':\r\n            return config.test;                    \r\n        default:\r\n            break;\r\n    }\r\n    return null;\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"compression\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"helmet\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"swagger-ui-express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"morgan\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cors\");","import { Router } from 'express';\r\n/**\r\n * Usa r.router para adquirir el router y r.ruta para adquirir la ruta\r\n *  \r\n * @class Route\r\n */\r\nclass Route {\r\n    protected _router: Router;\r\n    protected _ruta: string;\r\n\r\n    constructor(ruta: string, router: Router) {\r\n        this._router = router;\r\n        this._ruta = ruta[0] === '/' ? ruta : '/' + ruta;\r\n    }\r\n    \r\n    /**\r\n     * Adquiere la ruta con el formato /ruta\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof Route\r\n     */\r\n    public get ruta() : string {\r\n        return this._ruta;\r\n    }\r\n\r\n    /**\r\n     * Adquiere el router de tipo express.Router\r\n     *\r\n     * @readonly\r\n     * @type {Router}\r\n     * @memberof Route\r\n     */\r\n    public get router() : Router {\r\n        return this._router;\r\n    }\r\n}\r\n\r\nexport default Route;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http\");","import compression from 'compression';\r\nimport express from 'express';\r\nimport helmet from 'helmet';\r\nimport swaggerUI from 'swagger-ui-express';\r\nimport swaggerDoc from '../documentation/swaggerDocument.json';\r\nimport morgan from 'morgan';\r\nimport cors from 'cors';\r\nimport {crearRutaExample} from './routes/exampleRoute';\r\nimport { IExpressNecesaryFunctions, IExpressNecesaryParams } from '../lib/ExpressNecesary';\r\nimport http from 'http';\r\n\r\n/**\r\n *\r\n *\r\n * @class ExpressAPP\r\n * Clase para crear y manejar la aplicaci贸n de express\r\n */\r\nclass ExpressAPP implements IExpressNecesaryFunctions, IExpressNecesaryParams {\r\n    app: express.Application;\r\n    server: http.Server;\r\n    /**\r\n     *Creates an instance of ExpressAPP.\r\n     * @memberof ExpressAPP\r\n     */\r\n    constructor(port: number) {\r\n        this.app = express();\r\n        this.agregarConfiguracionBasica();\r\n        this.agregarRutas();\r\n        this.agregarDocumentacion();\r\n        this.crearServidor(port)\r\n    }\r\n\r\n    /**\r\n     * Agrega la configuraci贸n basica necesaria para el optimo y correcto funcionamiento de la app\r\n     *\r\n     * @memberof ExpressAPP\r\n     */\r\n    agregarConfiguracionBasica() {\r\n        this.app.use(helmet());\r\n        this.app.use(compression());\r\n        this.app.use(cors());\r\n        this.app.use(morgan(':method :url'));\r\n        this.app.use(express.json());\r\n        this.app.use(express.urlencoded({ extended: true }));\r\n    }\r\n    \r\n    /**\r\n     * Usando Swagger agrega la documentation base\r\n     * Es importante tener '../documentation/swaggerDocument'\r\n     * \r\n     * @memberof ExpressAPP\r\n     */\r\n    agregarDocumentacion() {\r\n        this.app.use('/api-docs', swaggerUI.serve, swaggerUI.setup(swaggerDoc));\r\n        // * Redirije / a la documentacion\r\n        this.app.get('/', (req, res) => {\r\n          res.redirect('/api-docs');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * En esta funcion agrega las rutas\r\n     *\r\n     * @memberof ExpressAPP\r\n     */\r\n    agregarRutas() {\r\n        const rutaExample = crearRutaExample();\r\n        this.app.use(rutaExample.ruta, rutaExample.router);\r\n    }\r\n\r\n    /**\r\n     * Crear el servidor dado un port, usa el module http\r\n     *\r\n     * @param {number} port\r\n     * @returns\r\n     * @memberof ExpressAPP\r\n     */\r\n    crearServidor(port: number) {\r\n        this.server = http.createServer(this.app);\r\n        this.server.listen(port);\r\n    }\r\n}\r\n\r\nexport default ExpressAPP;","import http from 'http';\r\nimport throng from 'throng';\r\nimport { getConfig } from './config/config';\r\nimport ExpressAPP from './server/ExpressAPP';\r\n\r\nconst WORKERS = (process.env.WEB_CONCURRENCY || 1) as number;\r\n\r\nconst configENV = getConfig(process.env.NODE_ENV);\r\n\r\nconst PORT = 2000;\r\n\r\nconst start = (id: number) => {\r\n    configENV.log().info(`Id Worker ${id}`);\r\n    const serverApp = new ExpressAPP(PORT);\r\n    const server = serverApp.server;\r\n    \r\n    server.on('listening', () => {\r\n        configENV.log().info('http://localhost:' + PORT);\r\n    });\r\n  \r\n    server.on('close', () => {\r\n        configENV.log().info('Servidor cerrado');\r\n    }) \r\n};\r\n\r\nthrong({ worker: start, count: WORKERS });","import { Router } from 'express';\r\nimport Route from './Route';\r\n\r\n// ** Crea una ruta\r\nexport const crearRutaExample = (): Route => {\r\n\r\n    const rutaNombre = 'example';\r\n    const router = Router();\r\n\r\n    // *Agregar las rutas get, post aqui\r\n    \r\n    router.get('/', (req, res) => {\r\n        return res.json({message: `Ruta /${rutaNombre} funciona`});\r\n    });\r\n\r\n    const rutaEjemplo = new Route(rutaNombre, router);\r\n\r\n    return rutaEjemplo;\r\n};\r\n","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[251](0, __webpack_exports__, __webpack_require__);\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","version","getLogger","serviceName","serviceVersion","name","config","development","estado","log","production","test","WORKERS","process","env","WEB_CONCURRENCY","configENV","worker","id","info","server","constructor","port","this","app","agregarConfiguracionBasica","agregarRutas","agregarDocumentacion","crearServidor","use","extended","req","res","redirect","rutaExample","router","Router","json","message","ruta","_router","_ruta","crearRutaExample","listen","on","count","__webpack_modules__"],"sourceRoot":""}